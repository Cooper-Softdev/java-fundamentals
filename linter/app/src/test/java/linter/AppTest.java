/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class AppTest {
  @Test
  void performLintingTestNoErrors() throws IOException {
    Path testNoErrors = Paths.get("src/test/resources/noErrors.js");

    String errors = App.linter(testNoErrors);

    String expectedErrors = "Errors found on lines: ";

    assertEquals(expectedErrors, errors);
  }

  @Test
  void performLintingTestOneError() throws IOException {
    Path testOneError = Paths.get("src/test/resources/oneError.js");

    String errors = App.linter(testOneError);
    String expectedErrors = "Errors found on lines: \n1";

    assertEquals(expectedErrors, errors);
  }

  @Test
  void performLintingTestFewErrors() throws IOException {
    Path testFewErrors = Paths.get("src/test/resources/fewErrors.js");

    String errors = App.linter(testFewErrors);
    String expectedErrors = "Errors found on lines: \n1\n3";

    assertEquals(expectedErrors, errors);
  }

  @Test
  void performLintingTestManyErrors() throws IOException {
    Path testManyErrors = Paths.get("src/test/resources/manyErrors.js");

    String errors = App.linter(testManyErrors);
    String expectedErrors = "Errors found on lines: \n1\n2\n3\n4";

    assertEquals(expectedErrors, errors);
  }

  @Test
  void performLintingTestEmptyFile() throws IOException {
    Path testEmptyFile = Paths.get("src/test/resources/emptyFile.js");

    String errors = App.linter(testEmptyFile);
    String expectedErrors = "Errors found on lines: ";

    assertEquals(expectedErrors, errors);
  }
}


